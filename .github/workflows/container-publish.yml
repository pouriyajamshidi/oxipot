name: Docker container build

on:
  workflow_run:
    workflows: ["rust"]
    types:
      - completed
    branches: ["master"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Extract Version
        id: version_step
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "VERSION_TAG=$GITHUB_REPOSITORY:${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "LATEST_TAG=$GITHUB_REPOSITORY:latest" >> $GITHUB_ENV

      - name: Print Version
        run: |
          echo ${{ env.VERSION }}
          echo ${{ env.VERSION_TAG }}
          echo ${{ env.LATEST_TAG }}

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract tag or use latest
        id: extract_tag
        run: |
          TAG_NAME=$(git tag --contains ${{ github.sha }})
          REPO_NAME=$(echo $REPO_NAME | tr '[:upper:]' '[:lower:]')
          if [ -z "$TAG_NAME" ]; then
            echo "TAG_NAME=latest" >> $GITHUB_ENV
          else
            echo "TAG_NAME=$REPO_NAME:$TAG_NAME" >> $GITHUB_ENV
          fi

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Check code compile
        run: cargo check

      - name: Login to DockerHub
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Login to GitHub Container Registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: |
            pouriyajamshidi/oxipot
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # tags: |
          #   ${{ secrets.DOCKER_HUB_USERNAME }}/oxipot:${{ env.TAG_NAME }}
          #   ${{ env.REGISTRY }}/${{ github.repository }}/oxipot:${{ env.TAG_NAME }}
          # labels: ${{ steps.meta.outputs.labels }}
